blueprint:
  name: Thermostat icon update via Openweathermap (day/night)
  description: Change thermostat icon based on weather condition code and time of day. Requires Openweathermap and Sun integrations.
  domain: automation
  source_url: https://github.com/claudegel/sinope-zha/tree/master/automation/blueprints/update_icon/update_icon_openweathermap.yaml
  input:
    weather_entity:
      name: Weather Icon Code Sensor
      description: Entity ID of the weather icon code sensor
      selector:
        entity:
          domain: sensor
    select_target:
      name: Thermostat Select Entity
      description: Target select entity for icon updates. Can be one or more.
      selector:
        target:
          entity:
            domain: select
    daytime:
      name: Daytime Mode
      description: Choose whether this automation runs during the day or night
      default: true
      selector:
        boolean:

mode: single

trigger:
  - platform: state
    entity_id: !input weather_entity
  - platform: sun
    event: sunset
    offset: "00:30:00"
  - platform: sun
    event: sunrise
    offset: "00:30:00"

variables:
  weather_change_day:
    "200": Cloudrainsun2
    "201": Cloudlightning
    "202": Cloudlightning
    "211": Cloudrainsun2
    "212": Cloudrainsun2
    "300": Cloud3
    "301": Cloud3
    "311": Cloud3
    "500": Cloudrainsun
    "501": Cloudrainsun3
    "502": Cloudrainsun4
    "504": Cloudrain3
    "511": Cloudlightning2
    "520": Cloudrain
    "521": Cloudrain2
    "522": Cloudrain3
    "600": Cloudsnow2
    "601": Cloudsnow4
    "602": Cloudsnow3
    "613": Cloud
    "615": Cloud
    "616": Cloud
    "621": Cloudsnow3
    "622": Cloudsnow5
    "701": Cloudfog
    "711": Cloudfog
    "721": Cloudfog
    "731": Cloudfog
    "741": Cloudfog
    "751": Cloudfog
    "761": Cloudfog
    "800": Sun
    "801": Sun2
    "802": Cloudsun
    "803": Cloudsun2
    "804": Cloud2

  weather_change_night:
    "200": Cloudrainmoon2
    "201": Cloudrainmoon2
    "211": Cloudrainmoon2
    "212": Cloudrainmoon2
    "300": Cloud3
    "301": Cloud3
    "311": Cloud3
    "500": Cloudrainmoon
    "501": Cloudrainmoon4
    "502": Cloudrainmoon5
    "503": Cloudrainmoon5
    "504": Cloudrain3
    "511": Cloudrainmoon3
    "521": Cloudrain2
    "522": Cloudrain3
    "600": Cloudsnow6
    "601": Cloudsnow4
    "602": Cloudsnow3
    "613": Cloud
    "620": Cloudsnow5
    "621": Cloudsnow3
    "622": Cloudsnow5
    "701": Cloudfog
    "711": Cloudfog
    "721": Cloudfog
    "731": Cloudfog
    "741": Cloudfog
    "751": Cloudfog
    "761": Cloudfog
    "771": Cloudsnow5
    "800": Moonstar
    "801": Cloudmoon
    "802": Cloudmoon2
    "803": Cloudmoon3
    "804": Cloud2

  selects: "{{ select_target.entity_id }}"

conditions:
  - condition: template
    value_template: >
      {{ (is_state('sun.sun', 'above_horizon') and daytime) or
         (is_state('sun.sun', 'below_horizon') and not daytime) }}

action:
  - repeat:
      count: "{{ selects | count }}"
      sequence:
        - service: select.select_option
          data:
            entity_id: "{{ selects[repeat.index - 1] }}"
            option: >
              {% set code = states(!input weather_entity) %}
              {% if daytime %}
                {{ weather_change_day.get(code, 'Hide') }}
              {% else %}
                {{ weather_change_night.get(code, 'Hide') }}
              {% endif %}

